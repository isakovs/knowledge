"""render()"""
render(request, template_name, context=None, content_type=None, status=None, using=None)
# В render() можно указать MIME-тип отдаваемого
# документа content_type, по умолчанию это text/html. Параметр status — это
# код HTTP-ответа сервера; чаще всего используются коды 200 и 404. В параметре
# using можно указать имя движка языка шаблонов, это нужно на сайтах, где
# применяется несколько разных движков.

"""redirect()"""
redirect(to, *args, permanent=False, **kwargs)
# Аргумент permanent=True сообщит браузеру и поисковым системам,
# что редирект постоянный и это надо запомнить.
# Редирект может быть полезен при попытке неавторизованного доступа
# к определённой странице или в случае, если структура адресов сайта
# была изменена, а пользователь запросил устаревший адрес.

"""get_object_or_404()"""
get_object_or_404(klass, *args, **kwargs)
# Функция ищет объект в базе, и если не находит — прерывает работу
# view-функции и возвращает страницу с ошибкой 404.
# Аргумент klass — это имя модели, у которой вызывается метод .get().
# Именованные аргументы kwargs — те же, что используются в
# методах get() и filter().

"""get_list_or_404()"""
get_list_or_404(klass, *args, **kwargs)
# Функция ищет список объектов в базе. Если не находит — прерывает
# работу view-функции и возвращает страницу с ошибкой 404.
# Аргументы и принцип работы те же, что и у get_object_or_404(),
# но при получении нескольких объектов не вызывается исключение.

"""reverse()"""
reverse(viewname, urlconf=None, args=None, kwargs=None, current_app=None)
# Эта функция позволяет обратиться к view-функции по её имени,
# указанному в path()
# В коде эта функция делает то же самое, что и тег {% url %}
# в шаблонах.